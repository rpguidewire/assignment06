#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.3.6 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 30 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 68 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
23 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
43 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
45 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
20 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
0 1 #"\0"
0 -1 1 #"\0"
0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 65 105 225 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1
          0 3827 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 175
(
 #"#reader(lib \"htdp-beginner-abbr-reader.ss\" \"lang\")((modname bst)"
 #" (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constr"
 #"uctor repeating-decimal #f #t none #f ())))"
) 0 0 4 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 23 3 1 #" "
0 0 14 3 4 #"node"
0 0 23 3 2 #" ("
0 0 14 3 1 #"k"
0 0 23 3 1 #" "
0 0 14 3 1 #"v"
0 0 23 3 1 #" "
0 0 14 3 4 #"left"
0 0 23 3 1 #" "
0 0 14 3 5 #"right"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";;Examples "
0 0 23 29 1 #"\n"
0 0 17 3 5 #";;One"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"a7"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"8"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"G\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"a6"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"F\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"a5"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"E\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"a4"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"D\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"a3"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"9"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"C\""
0 0 23 3 1 #" "
0 0 14 3 2 #"a7"
0 0 23 3 1 #" "
0 0 14 3 2 #"a6"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"a2"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"B\""
0 0 23 3 1 #" "
0 0 14 3 2 #"a4"
0 0 23 3 1 #" "
0 0 14 3 2 #"a5"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"a1"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"A\""
0 0 23 3 1 #" "
0 0 14 3 2 #"a2"
0 0 23 3 1 #" "
0 0 14 3 2 #"a3"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 5 #";;Two"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"b7"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"8"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"G\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"b6"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"F\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"b5"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"E\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"b4"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"D\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"b3"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"9"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"C\""
0 0 23 3 1 #" "
0 0 14 3 2 #"b7"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"b2"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"B\""
0 0 23 3 1 #" "
0 0 14 3 2 #"b4"
0 0 23 3 1 #" "
0 0 14 3 2 #"b5"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"b1"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"A\""
0 0 23 3 1 #" "
0 0 14 3 2 #"b2"
0 0 23 3 1 #" "
0 0 14 3 2 #"b3"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 7 #";;Three"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"c6"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"F\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"c5"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"E\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"c4"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"D\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"c3"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"9"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"C\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"16"
0 0 23 3 1 #" "
0 0 19 3 6 #"\"true\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"c2"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"B\""
0 0 23 3 1 #" "
0 0 14 3 2 #"c4"
0 0 23 3 1 #" "
0 0 14 3 2 #"c5"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"c1"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"A\""
0 0 23 3 1 #" "
0 0 14 3 2 #"c2"
0 0 23 3 1 #" "
0 0 14 3 2 #"c3"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 50 #";;SAMPLES PROVIDED BY INSTRUCTOR IN SEPERATE FILE "
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 12 #"sample-bst-1"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"8"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"8\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"4\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"2\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"1\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"3\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"6"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"6\""
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"5\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"7"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"7\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"12"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"12\""
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"10\""
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"9"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"9\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"11"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"11\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"14"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"14\""
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"13"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"13\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 12 #"sample-bst-2"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 3 #"154"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"150\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 3 #"110"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"110\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 3 #"142"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"142\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 3 #"111"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"111\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 3 #"144"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"144\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 3 #"212"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"212\""
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 3 #"177"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"177\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 3 #"242"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"242\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 3 #"266"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"266\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 3 #"391"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"391\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 3 #"305"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"305\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 6 #"))))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 10 #"sample-bst"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"75"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"75\""
0 0 23 3 1 #" "
0 0 14 3 12 #"sample-bst-1"
0 0 23 3 1 #" "
0 0 14 3 12 #"sample-bst-2"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 15 #"sample-full-bst"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"b\""
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"c\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 25 #"                        ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"6"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"f\""
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"e\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 36 #"                                   ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"8"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"h\""
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"7"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"g\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 47 #"                                              ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"9"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"i\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 6 #"))))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 18 #"sample-perfect-bst"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"b\""
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"c\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 3 #") ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 3 #"1.5"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"aa\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"c\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 3 #") ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"6"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"f\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 13 #";;Question 1A"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 34 #";;bst-add: Bst Num String --> Bst "
0 0 23 29 1 #"\n"
0 0 17 3 111
(
 #";;The purpose of this fuction is to take in a Binary Search Tree, ab"
 #"st, a num, k and a string, v. The function "
) 0 0 23 29 1 #"\n"
0 0 17 3 98
(
 #";;traverse through abst to locate the key which matched the given in"
 #"put k, if sucha  key is found,"
) 0 0 23 29 1 #"\n"
0 0 17 3 118
(
 #";; the function replaces value in the given key node with the input "
 #"value k. Else it adds the given key to the end of "
) 0 0 23 29 1 #"\n"
0 0 17 3 27 #";; the bst as a leaf node. "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";;Examples "
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 7 #"bst-add"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"Trial\""
0 0 23 3 3 #") ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"Trial\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 7 #"bst-add"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"b\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 2 #") "
0 0 20 3 2 #"12"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"candy\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"b\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 3 #") ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"12"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"candy\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 7 #"bst-add"
0 0 23 3 1 #" "
0 0 14 3 2 #"a7"
0 0 23 3 1 #" "
0 0 20 3 1 #"8"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"hi\""
0 0 23 3 3 #") ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"8"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"hi\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #" "
0 0 17 3 43 #";;Function Definition                      "
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 7 #"bst-add"
0 0 23 3 1 #" "
0 0 14 3 4 #"abst"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 1 #" "
0 0 14 3 1 #"v"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 4 #"cond"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 4 #"  [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 4 #"abst"
0 0 23 3 3 #") ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 1 #" "
0 0 14 3 1 #"v"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"  [("
0 0 14 3 6 #"equal?"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 2 #" ("
0 0 14 3 6 #"node-k"
0 0 23 3 1 #" "
0 0 14 3 4 #"abst"
0 0 23 3 4 #")) ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 1 #" "
0 0 14 3 1 #"v"
0 0 23 3 2 #" ("
0 0 14 3 9 #"node-left"
0 0 23 3 1 #" "
0 0 14 3 4 #"abst"
0 0 23 3 3 #") ("
0 0 14 3 10 #"node-right"
0 0 23 3 1 #" "
0 0 14 3 4 #"abst"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"  [("
0 0 14 3 1 #"<"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 2 #" ("
0 0 14 3 6 #"node-k"
0 0 23 3 1 #" "
0 0 14 3 4 #"abst"
0 0 23 3 4 #")) ("
0 0 14 3 9 #"make-node"
0 0 23 3 2 #" ("
0 0 14 3 6 #"node-k"
0 0 23 3 1 #" "
0 0 14 3 4 #"abst"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 37 #"                                    ("
0 0 14 3 6 #"node-v"
0 0 23 3 1 #" "
0 0 14 3 4 #"abst"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 37 #"                                    ("
0 0 14 3 7 #"bst-add"
0 0 23 3 2 #" ("
0 0 14 3 9 #"node-left"
0 0 23 3 1 #" "
0 0 14 3 4 #"abst"
0 0 23 3 2 #") "
0 0 14 3 1 #"k"
0 0 23 3 1 #" "
0 0 14 3 1 #"v"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 37 #"                                    ("
0 0 14 3 10 #"node-right"
0 0 23 3 1 #" "
0 0 14 3 4 #"abst"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"  [("
0 0 14 3 1 #">"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 2 #" ("
0 0 14 3 6 #"node-k"
0 0 23 3 1 #" "
0 0 14 3 4 #"abst"
0 0 23 3 4 #")) ("
0 0 14 3 9 #"make-node"
0 0 23 3 2 #" ("
0 0 14 3 6 #"node-k"
0 0 23 3 1 #" "
0 0 14 3 4 #"abst"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 37 #"                                    ("
0 0 14 3 6 #"node-v"
0 0 23 3 1 #" "
0 0 14 3 4 #"abst"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 37 #"                                    ("
0 0 14 3 9 #"node-left"
0 0 23 3 1 #" "
0 0 14 3 4 #"abst"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 37 #"                                    ("
0 0 14 3 7 #"bst-add"
0 0 23 3 2 #" ("
0 0 14 3 10 #"node-right"
0 0 23 3 1 #" "
0 0 14 3 4 #"abst"
0 0 23 3 2 #") "
0 0 14 3 1 #"k"
0 0 23 3 1 #" "
0 0 14 3 1 #"v"
0 0 23 3 5 #"))]))"
0 0 23 29 1 #"\n"
0 0 17 3 8 #";;Tests "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 7 #"bst-add"
0 0 23 3 1 #" "
0 0 14 3 2 #"a7"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"hi\""
0 0 23 3 3 #") ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"8"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"G\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"hi\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 7 #"bst-add"
0 0 23 3 1 #" "
0 0 14 3 2 #"a7"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"hi\""
0 0 23 3 3 #") ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"8"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"G\""
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"hi\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 7 #"bst-add"
0 0 23 3 1 #" "
0 0 14 3 2 #"a1"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"hello\""
0 0 23 3 3 #") ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"A\""
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"B\""
0 0 23 29 1 #"\n"
0 0 23 3 67
#"                                                                  ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"D\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 67
#"                                                                  ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"E\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 50 #"                                                 ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"9"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"C\""
0 0 23 29 1 #"\n"
0 0 23 3 61
#"                                                            ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"8"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"G\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 61
#"                                                            ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"hello\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 7 #"bst-add"
0 0 23 3 1 #" "
0 0 14 3 2 #"a1"
0 0 23 3 1 #" "
0 0 20 3 2 #"12"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"hello\""
0 0 23 3 4 #")  ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"A\""
0 0 23 3 1 #"("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"B\""
0 0 23 29 1 #"\n"
0 0 23 3 57 #"                                                        ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"D\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 57 #"                                                        ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"E\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 56 #"                                                       ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"9"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"C\""
0 0 23 29 1 #"\n"
0 0 23 3 57 #"                                                        ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"8"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"G\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 57 #"                                                        ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"F\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 56 #"                                                       ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"12"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"hello\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 5 #")))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 7 #"bst-add"
0 0 23 3 1 #" "
0 0 14 3 2 #"a1"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"-A\""
0 0 23 3 3 #") ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"A\""
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"B\""
0 0 23 29 1 #"\n"
0 0 23 3 62
#"                                                             ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"D\""
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"-A\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 62
#"                                                             ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"E\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 52 #"                                                   ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"9"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"C\""
0 0 23 29 1 #"\n"
0 0 23 3 61
#"                                                            ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"8"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"G\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 61
#"                                                            ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"F\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 7 #"bst-add"
0 0 23 3 1 #" "
0 0 14 3 2 #"a2"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"hi\""
0 0 23 3 3 #") ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"B\""
0 0 23 29 1 #"\n"
0 0 23 3 45 #"                                            ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"D\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 45 #"                                            ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"E\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"hi\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 7 #"bst-add"
0 0 23 3 1 #" "
0 0 14 3 2 #"a2"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 19 3 8 #"\"google\""
0 0 23 3 3 #") ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"B\""
0 0 23 29 1 #"\n"
0 0 23 3 45 #"                                            ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"D\""
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 19 3 8 #"\"google\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 45 #"                                            ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"E\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 7 #"bst-add"
0 0 23 3 1 #" "
0 0 14 3 2 #"a2"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"GGG\""
0 0 23 3 3 #") ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"GGG\""
0 0 23 29 1 #"\n"
0 0 23 3 45 #"                                            ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"D\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 45 #"                                            ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"E\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 7 #"bst-add"
0 0 23 3 1 #" "
0 0 14 3 2 #"a1"
0 0 23 3 1 #" "
0 0 20 3 1 #"9"
0 0 23 3 1 #" "
0 0 19 3 10 #"\"facebook\""
0 0 23 3 3 #") ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"A\""
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"B\""
0 0 23 29 1 #"\n"
0 0 23 3 67
#"                                                                  ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"D\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 67
#"                                                                  ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"E\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 50 #"                                                 ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"9"
0 0 23 3 1 #" "
0 0 19 3 10 #"\"facebook\""
0 0 23 29 1 #"\n"
0 0 23 3 61
#"                                                            ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"8"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"G\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 61
#"                                                            ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"F\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 7 #"bst-add"
0 0 23 3 1 #" "
0 0 14 3 2 #"a1"
0 0 23 3 1 #" "
0 0 20 3 1 #"8"
0 0 23 3 1 #" "
0 0 19 3 10 #"\"facebook\""
0 0 23 3 3 #") ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"A\""
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"B\""
0 0 23 29 1 #"\n"
0 0 23 3 67
#"                                                                  ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"D\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 67
#"                                                                  ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"E\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 50 #"                                                 ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"9"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"C\""
0 0 23 29 1 #"\n"
0 0 23 3 61
#"                                                            ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"8"
0 0 23 3 1 #" "
0 0 19 3 10 #"\"facebook\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 61
#"                                                            ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"F\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 7 #"bst-add"
0 0 23 3 1 #" "
0 0 14 3 12 #"sample-bst-1"
0 0 23 3 1 #" "
0 0 20 3 2 #"17"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"Hello\""
0 0 23 3 3 #") ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"8"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"8\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 60
#"                                                           ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"4\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 71
(
 #"                                                                    "
 #"  ("
) 0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"2\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 82
(
 #"                                                                    "
 #"             ("
) 0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"1\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 82
(
 #"                                                                    "
 #"             ("
) 0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"3\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 71
(
 #"                                                                    "
 #"  ("
) 0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"6"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"6\""
0 0 23 29 1 #"\n"
0 0 23 3 82
(
 #"                                                                    "
 #"             ("
) 0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"5\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 82
(
 #"                                                                    "
 #"             ("
) 0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"7"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"7\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 60
#"                                                           ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"12"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"12\""
0 0 23 29 1 #"\n"
0 0 23 3 71
(
 #"                                                                    "
 #"  ("
) 0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"10\""
0 0 23 29 1 #"\n"
0 0 23 3 82
(
 #"                                                                    "
 #"             ("
) 0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"9"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"9\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 82
(
 #"                                                                    "
 #"             ("
) 0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"11"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"11\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 71
(
 #"                                                                    "
 #"  ("
) 0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"14"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"14\""
0 0 23 29 1 #"\n"
0 0 23 3 82
(
 #"                                                                    "
 #"             ("
) 0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"13"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"13\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 82
(
 #"                                                                    "
 #"             ("
) 0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"17"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"Hello\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 5 #")))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 7 #"bst-add"
0 0 23 3 1 #" "
0 0 14 3 12 #"sample-bst-1"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 19 3 9 #"\"Changed\""
0 0 23 3 3 #") ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"8"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"8\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 62
#"                                                             ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"4\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 73
(
 #"                                                                    "
 #"    ("
) 0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"2\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 84
(
 #"                                                                    "
 #"               ("
) 0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"1\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 84
(
 #"                                                                    "
 #"               ("
) 0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"3\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 73
(
 #"                                                                    "
 #"    ("
) 0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"6"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"6\""
0 0 23 29 1 #"\n"
0 0 23 3 84
(
 #"                                                                    "
 #"               ("
) 0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"5\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 84
(
 #"                                                                    "
 #"               ("
) 0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"7"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"7\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 62
#"                                                             ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"12"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"12\""
0 0 23 29 1 #"\n"
0 0 23 3 73
(
 #"                                                                    "
 #"    ("
) 0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 19 3 9 #"\"Changed\""
0 0 23 29 1 #"\n"
0 0 23 3 84
(
 #"                                                                    "
 #"               ("
) 0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"9"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"9\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 84
(
 #"                                                                    "
 #"               ("
) 0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"11"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"11\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 73
(
 #"                                                                    "
 #"    ("
) 0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"14"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"14\""
0 0 23 29 1 #"\n"
0 0 23 3 84
(
 #"                                                                    "
 #"               ("
) 0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"13"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"13\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 7 #"bst-add"
0 0 23 3 1 #" "
0 0 14 3 12 #"sample-bst-1"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 19 3 9 #"\"Changed\""
0 0 23 3 3 #") ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"8"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"8\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 62
#"                                                             ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"4\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 73
(
 #"                                                                    "
 #"    ("
) 0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"2\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 84
(
 #"                                                                    "
 #"               ("
) 0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"1\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 84
(
 #"                                                                    "
 #"               ("
) 0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"3\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 73
(
 #"                                                                    "
 #"    ("
) 0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"6"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"6\""
0 0 23 29 1 #"\n"
0 0 23 3 84
(
 #"                                                                    "
 #"               ("
) 0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 19 3 9 #"\"Changed\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 84
(
 #"                                                                    "
 #"               ("
) 0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"7"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"7\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 62
#"                                                             ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"12"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"12\""
0 0 23 29 1 #"\n"
0 0 23 3 73
(
 #"                                                                    "
 #"    ("
) 0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"10\""
0 0 23 29 1 #"\n"
0 0 23 3 84
(
 #"                                                                    "
 #"               ("
) 0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"9"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"9\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 84
(
 #"                                                                    "
 #"               ("
) 0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"11"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"11\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 73
(
 #"                                                                    "
 #"    ("
) 0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"14"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"14\""
0 0 23 29 1 #"\n"
0 0 23 3 84
(
 #"                                                                    "
 #"               ("
) 0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"13"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"13\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 13 #";;Question 1B"
0 0 23 29 1 #"\n"
0 0 17 3 28 #";;bat-full?: Bst -> Boolean "
0 0 23 29 1 #"\n"
0 0 17 3 124
(
 #";; The purpose of this function is to take in a Binary Search Tree, "
 #"bst and return true if each node has 0 or 2 leaf nodes, "
) 0 0 23 29 1 #"\n"
0 0 17 3 39 #";; (children nodes) else return false. "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 10 #";;Examples"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 9 #"bst-full?"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #") "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 9 #"bst-full?"
0 0 23 3 1 #" "
0 0 14 3 2 #"a6"
0 0 23 3 2 #") "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 9 #"bst-full?"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"7"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"*\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"trial\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 4 #"))) "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 9 #"bst-full?"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"7"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"*\""
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"t\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 3 #") ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"trial\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 4 #"))) "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #" "
0 0 17 3 60
#";;Function Definition                                       "
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 9 #"bst-full?"
0 0 23 3 1 #" "
0 0 14 3 3 #"bst"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"bst"
0 0 23 3 2 #") "
0 0 14 3 4 #"true"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 2 #"or"
0 0 23 3 2 #" ("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 23 3 2 #" ("
0 0 14 3 9 #"node-left"
0 0 23 3 1 #" "
0 0 14 3 3 #"bst"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 5 #"node?"
0 0 23 3 2 #" ("
0 0 14 3 10 #"node-right"
0 0 23 3 1 #" "
0 0 14 3 3 #"bst"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 5 #"node?"
0 0 23 3 2 #" ("
0 0 14 3 9 #"node-left"
0 0 23 3 1 #" "
0 0 14 3 3 #"bst"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 6 #"empty?"
0 0 23 3 2 #" ("
0 0 14 3 10 #"node-right"
0 0 23 3 1 #" "
0 0 14 3 3 #"bst"
0 0 23 3 5 #")))) "
0 0 14 3 5 #"false"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 9 #"bst-full?"
0 0 23 3 2 #" ("
0 0 14 3 10 #"node-right"
0 0 23 3 1 #" "
0 0 14 3 3 #"bst"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 9 #"bst-full?"
0 0 23 3 2 #" ("
0 0 14 3 9 #"node-left"
0 0 23 3 1 #" "
0 0 14 3 3 #"bst"
0 0 23 3 6 #")))]))"
0 0 23 29 1 #"\n"
0 0 17 3 8 #";;Tests "
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 9 #"bst-full?"
0 0 23 3 1 #" "
0 0 14 3 2 #"a1"
0 0 23 3 3 #" ) "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 9 #"bst-full?"
0 0 23 3 1 #" "
0 0 14 3 2 #"a2"
0 0 23 3 2 #") "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 9 #"bst-full?"
0 0 23 3 1 #" "
0 0 14 3 2 #"b1"
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 9 #"bst-full?"
0 0 23 3 1 #" "
0 0 14 3 2 #"b2"
0 0 23 3 2 #") "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 9 #"bst-full?"
0 0 23 3 1 #" "
0 0 14 3 2 #"c1"
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 9 #"bst-full?"
0 0 23 3 1 #" "
0 0 14 3 2 #"c2"
0 0 23 3 2 #") "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 9 #"bst-full?"
0 0 23 3 1 #" "
0 0 14 3 2 #"c3"
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 9 #"bst-full?"
0 0 23 3 1 #" "
0 0 14 3 2 #"c4"
0 0 23 3 2 #") "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 9 #"bst-full?"
0 0 23 3 1 #" "
0 0 14 3 15 #"sample-full-bst"
0 0 23 3 2 #") "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 9 #"bst-full?"
0 0 23 3 1 #" "
0 0 14 3 12 #"sample-bst-1"
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 9 #"bst-full?"
0 0 23 3 1 #" "
0 0 14 3 12 #"sample-bst-2"
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"           "
0 0 23 29 1 #"\n"
0 0 17 3 13 #";;Question 1C"
0 0 23 29 1 #"\n"
0 0 17 3 25 #";;bst-height: Bst --> Nat"
0 0 23 29 1 #"\n"
0 0 17 3 108
(
 #";; The purpose of this function is take in a Binary Search Tree, Bst"
 #" and turn the maximum height of the tree"
) 0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";;Examples "
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 10 #"bst-height"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #") "
0 0 20 3 1 #"0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 10 #"bst-height"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"h\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 3 #")) "
0 0 20 3 1 #"1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 10 #"bst-height"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"h\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"r\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 4 #"))) "
0 0 20 3 1 #"2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 23 29 1 #"\n"
0 0 17 3 27 #";;Function Definition      "
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 10 #"bst-height"
0 0 23 3 1 #" "
0 0 14 3 3 #"bst"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"bst"
0 0 23 3 2 #") "
0 0 20 3 1 #"0"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 3 #"max"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #" ("
0 0 14 3 10 #"bst-height"
0 0 23 3 2 #" ("
0 0 14 3 9 #"node-left"
0 0 23 3 1 #" "
0 0 14 3 3 #"bst"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #" ("
0 0 14 3 10 #"bst-height"
0 0 23 3 2 #" ("
0 0 14 3 10 #"node-right"
0 0 23 3 1 #" "
0 0 14 3 3 #"bst"
0 0 23 3 7 #"))))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 8 #";;Tests "
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 10 #"bst-height"
0 0 23 3 1 #" "
0 0 14 3 12 #"sample-bst-1"
0 0 23 3 2 #") "
0 0 20 3 1 #"4"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 10 #"bst-height"
0 0 23 3 1 #" "
0 0 14 3 12 #"sample-bst-2"
0 0 23 3 2 #") "
0 0 20 3 1 #"6"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 10 #"bst-height"
0 0 23 3 1 #" "
0 0 14 3 10 #"sample-bst"
0 0 23 3 2 #") "
0 0 20 3 1 #"7"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 10 #"bst-height"
0 0 23 3 1 #" "
0 0 14 3 15 #"sample-full-bst"
0 0 23 3 2 #") "
0 0 20 3 1 #"5"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 10 #"bst-height"
0 0 23 3 1 #" "
0 0 14 3 18 #"sample-perfect-bst"
0 0 23 3 2 #") "
0 0 20 3 1 #"3"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 10 #"bst-height"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 3 #"212"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"212\""
0 0 23 29 1 #"\n"
0 0 23 3 38 #"                                     ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 3 #"177"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"177\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 38 #"                                     ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 3 #"242"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"242\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 29 1 #"\n"
0 0 23 3 42 #"                                         ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 3 #"266"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"266\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 29 1 #"\n"
0 0 23 3 47 #"                                              ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 3 #"391"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"391\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 52 #"                                                   ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 3 #"305"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"305\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 6 #"))))) "
0 0 20 3 1 #"5"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 13 #";;Question 1D"
0 0 23 29 1 #"\n"
0 0 17 3 31 #";;bst-perfect?: Bst --> Boolean"
0 0 23 29 1 #"\n"
0 0 17 3 133
(
 #";;Purpose: The purpose of this function is to take in a Binary Searc"
 #"h Tree, bst, and return true if every node's left and right tree "
) 0 0 23 29 1 #"\n"
0 0 17 3 23 #";; are of same height. "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";;Examples "
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"bst-perfect?"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #") "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"bst-perfect?"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"s\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 3 #")) "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"bst-perfect?"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"s\""
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 3 #") ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"13"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 4 #"))) "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"bst-perfect?"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"s\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"13"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 4 #"))) "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 27 #";;Function Definition      "
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 12 #"bst-perfect?"
0 0 23 3 1 #" "
0 0 14 3 3 #"bst"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"bst"
0 0 23 3 2 #") "
0 0 14 3 4 #"true"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 3 #"and"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 12 #"           ("
0 0 14 3 1 #"="
0 0 23 3 2 #" ("
0 0 14 3 10 #"bst-height"
0 0 23 3 2 #" ("
0 0 14 3 9 #"node-left"
0 0 23 3 1 #" "
0 0 14 3 3 #"bst"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 10 #"bst-height"
0 0 23 3 2 #" ("
0 0 14 3 10 #"node-right"
0 0 23 3 1 #" "
0 0 14 3 3 #"bst"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"           ("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 12 #"bst-perfect?"
0 0 23 3 2 #" ("
0 0 14 3 9 #"node-left"
0 0 23 3 1 #" "
0 0 14 3 3 #"bst"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 12 #"bst-perfect?"
0 0 23 3 2 #" ("
0 0 14 3 10 #"node-right"
0 0 23 3 1 #" "
0 0 14 3 3 #"bst"
0 0 23 3 7 #"))))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 8 #";;Tests "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"bst-perfect?"
0 0 23 3 1 #" "
0 0 14 3 2 #"a1"
0 0 23 3 2 #") "
0 0 14 3 4 #"true"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"bst-perfect?"
0 0 23 3 1 #" "
0 0 14 3 18 #"sample-perfect-bst"
0 0 23 3 2 #") "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"bst-perfect?"
0 0 23 3 1 #" "
0 0 14 3 10 #"sample-bst"
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"bst-perfect?"
0 0 23 3 1 #" "
0 0 14 3 12 #"sample-bst-1"
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"bst-perfect?"
0 0 23 3 1 #" "
0 0 14 3 12 #"sample-bst-2"
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"bst-perfect?"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"4\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                       ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"2\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 51 #"                                                  ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"1\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 51 #"                                                  ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"3\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                       ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"6"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"6\""
0 0 23 29 1 #"\n"
0 0 23 3 51 #"                                                  ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"5\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 51 #"                                                  ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 1 #"7"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"7\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 5 #")))) "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"bst-perfect?"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 3 #"154"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"154\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                       ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 3 #"110"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"110\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 51 #"                                                  ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 3 #"142"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"142\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                       ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 3 #"212"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"212\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 51 #"                                                  ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 3 #"177"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"177\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"  "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 50 #"                                                  "
0 0 14 3 5 #"empty"
0 0 23 3 4 #"))) "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"bst-perfect?"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 3 #"154"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"154\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                       ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 3 #"110"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"110\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 51 #"                                                  ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 3 #"108"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"108\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 51 #"                                                  ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 3 #"142"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"142"
0 0 19 3 1 #"\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                       ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 3 #"212"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"212"
0 0 19 3 1 #"\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 51 #"                                                  ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 3 #"177"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"177"
0 0 19 3 1 #"\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"  "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 51 #"                                                  ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 3 #"246"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"246"
0 0 19 3 1 #"\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 5 #")))) "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                            "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 13 #";;Question 1E"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 22 #";;bst->sal: Bst --> AL"
0 0 23 29 1 #"\n"
0 0 17 3 137
(
 #";; The purpose of this function is to take in a Binary Search Tree a"
 #"nd return an association list in asscending order based on their key"
 #"s"
) 0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";;Examples "
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 8 #"bst->sal"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 8 #"bst->sal"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 19 3 2 #"\"s"
0 0 19 3 1 #"\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 19 3 2 #"\"s"
0 0 19 3 1 #"\""
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 8 #"bst->sal"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"19"
0 0 23 3 1 #" "
0 0 19 3 2 #"\"r"
0 0 19 3 1 #"\""
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-node"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 19 3 2 #"\"q"
0 0 19 3 1 #"\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 19 3 2 #"\"q"
0 0 19 3 1 #"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 88
(
 #"                                                                    "
 #"                   ("
) 0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 2 #"19"
0 0 23 3 1 #" "
0 0 19 3 2 #"\"r"
0 0 19 3 1 #"\""
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"               "
0 0 23 29 1 #"\n"
0 0 17 3 27 #";;Function Definition      "
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 8 #"bst->sal"
0 0 23 3 1 #" "
0 0 14 3 3 #"bst"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"bst"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 6 #"append"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 8 #"bst->sal"
0 0 23 3 2 #" ("
0 0 14 3 9 #"node-left"
0 0 23 3 1 #" "
0 0 14 3 3 #"bst"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #"("
0 0 14 3 6 #"node-k"
0 0 23 3 1 #" "
0 0 14 3 3 #"bst"
0 0 23 3 3 #") ("
0 0 14 3 6 #"node-v"
0 0 23 3 1 #" "
0 0 14 3 3 #"bst"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 8 #"bst->sal"
0 0 23 3 2 #" ("
0 0 14 3 10 #"node-right"
0 0 23 3 1 #" "
0 0 14 3 3 #"bst"
0 0 23 3 7 #")))])) "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 8 #";;Tests "
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 8 #"bst->sal"
0 0 23 3 1 #" "
0 0 14 3 12 #"sample-bst-1"
0 0 23 3 3 #") ("
0 0 14 3 4 #"list"
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                       ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 19 3 2 #"\"1"
0 0 19 3 1 #"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                       ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 19 3 2 #"\"2"
0 0 19 3 1 #"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                       ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 19 3 2 #"\"3"
0 0 19 3 1 #"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                       ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 19 3 2 #"\"4"
0 0 19 3 1 #"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                       ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 19 3 2 #"\"5"
0 0 19 3 1 #"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                       ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"6"
0 0 23 3 1 #" "
0 0 19 3 2 #"\"6"
0 0 19 3 1 #"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                       ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"7"
0 0 23 3 1 #" "
0 0 19 3 2 #"\"7"
0 0 19 3 1 #"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                       ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"8"
0 0 23 3 1 #" "
0 0 19 3 2 #"\"8"
0 0 19 3 1 #"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                       ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"9"
0 0 23 3 1 #" "
0 0 19 3 2 #"\"9"
0 0 19 3 1 #"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                       ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"10"
0 0 19 3 1 #"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                       ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 2 #"11"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"11"
0 0 19 3 1 #"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                       ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 2 #"12"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"12"
0 0 19 3 1 #"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                       ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 2 #"13"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"13"
0 0 19 3 1 #"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                       ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 2 #"14"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"14"
0 0 19 3 1 #"\""
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 8 #"bst->sal"
0 0 23 3 1 #" "
0 0 14 3 12 #"sample-bst-2"
0 0 23 3 3 #") ("
0 0 14 3 4 #"list"
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                       ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 3 #"110"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"110"
0 0 19 3 1 #"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                       ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 3 #"111"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"111"
0 0 19 3 1 #"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                       ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 3 #"142"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"142"
0 0 19 3 1 #"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                       ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 3 #"144"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"144"
0 0 19 3 1 #"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                       ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 3 #"154"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"150"
0 0 19 3 1 #"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                       ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 3 #"177"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"177"
0 0 19 3 1 #"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                       ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 3 #"212"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"212"
0 0 19 3 1 #"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                       ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 3 #"242"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"242"
0 0 19 3 1 #"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                       ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 3 #"266"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"266"
0 0 19 3 1 #"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                       ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 3 #"305"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"305"
0 0 19 3 1 #"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                       ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 3 #"391"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"391"
0 0 19 3 1 #"\""
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 8 #"bst->sal"
0 0 23 3 1 #" "
0 0 14 3 15 #"sample-full-bst"
0 0 23 3 3 #") ("
0 0 14 3 4 #"list"
0 0 23 29 1 #"\n"
0 0 23 3 43 #"                                          ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 19 3 2 #"\"a"
0 0 19 3 1 #"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 43 #"                                          ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 19 3 2 #"\"b"
0 0 19 3 1 #"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 43 #"                                          ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 19 3 2 #"\"c"
0 0 19 3 1 #"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 43 #"                                          ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 19 3 2 #"\"d"
0 0 19 3 1 #"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 43 #"                                          ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 19 3 2 #"\"e"
0 0 19 3 1 #"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 43 #"                                          ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"6"
0 0 23 3 1 #" "
0 0 19 3 2 #"\"f"
0 0 19 3 1 #"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 43 #"                                          ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"7"
0 0 23 3 1 #" "
0 0 19 3 2 #"\"g"
0 0 19 3 1 #"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 43 #"                                          ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"8"
0 0 23 3 1 #" "
0 0 19 3 2 #"\"h"
0 0 19 3 1 #"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 43 #"                                          ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"9"
0 0 23 3 1 #" "
0 0 19 3 2 #"\"i"
0 0 19 3 1 #"\""
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 8 #"bst->sal"
0 0 23 3 1 #" "
0 0 14 3 18 #"sample-perfect-bst"
0 0 23 3 4 #")  ("
0 0 14 3 4 #"list"
0 0 23 29 1 #"\n"
0 0 23 3 47 #"                                              ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 19 3 2 #"\"c"
0 0 19 3 1 #"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 47 #"                                              ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 2 #"a\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 47 #"                                              ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 6          10 57 4 #"3/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"aa\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 47 #"                                              ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"b\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 47 #"                                              ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"c\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 47 #"                                              ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 47 #"                                              ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"6"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"f\""
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 8 #"bst->sal"
0 0 23 3 1 #" "
0 0 14 3 2 #"a1"
0 0 23 3 3 #") ("
0 0 14 3 4 #"list"
0 0 23 29 1 #"\n"
0 0 23 3 30 #"                             ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"D\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 30 #"                             ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"B\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 30 #"                             ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"E\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 30 #"                             ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"A\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 30 #"                             ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"8"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"G\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 30 #"                             ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"9"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"C\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 30 #"                             ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"F\""
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 8 #"bst->sal"
0 0 23 3 1 #" "
0 0 14 3 2 #"c1"
0 0 23 3 3 #") ("
0 0 14 3 4 #"list"
0 0 23 29 1 #"\n"
0 0 23 3 30 #"                             ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"D\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 30 #"                             ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"B\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 30 #"                             ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"E\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 30 #"                             ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"A\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 30 #"                             ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"9"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"C\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 30 #"                             ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 2 #"16"
0 0 23 3 1 #" "
0 0 19 3 6 #"\"true\""
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 8 #"bst->sal"
0 0 23 3 1 #" "
0 0 14 3 2 #"b1"
0 0 23 3 3 #") ("
0 0 14 3 4 #"list"
0 0 23 29 1 #"\n"
0 0 23 3 30 #"                             ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"D\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 30 #"                             ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"B\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 30 #"                             ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"E\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 30 #"                             ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"A\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 30 #"                             ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"8"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"G\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 30 #"                             ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"9"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"C\""
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"             "
0           0
